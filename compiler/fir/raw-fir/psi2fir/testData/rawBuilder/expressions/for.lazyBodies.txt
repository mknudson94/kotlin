FILE: for.kt
    public? final? fun foo(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? fun fooLabeled(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? fun bar(list: List<String>): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? data class Some : R|kotlin/Any| {
        public? constructor(x: Int, y: Int): R|Some| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? val x: Int = R|<local>/x|
            public? get(): Int

        public? final? val y: Int = R|<local>/y|
            public? get(): Int

        public final operator fun component1(): Int

        public final operator fun component2(): Int

        public final fun copy(x: Int = this@R|/Some|.R|/Some.x|, y: Int = this@R|/Some|.R|/Some.y|): R|Some|

        public final operator fun equals(other: R|kotlin/Any?|): R|kotlin/Boolean|

        public final fun hashCode(): R|kotlin/Int|

        public final fun toString(): R|kotlin/String|

    }
    public? final? fun baz(set: Set<Some>): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? fun withParameter(list: List<Some>): R|kotlin/Unit| { LAZY_BLOCK }
