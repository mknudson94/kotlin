FILE: destructuring.kt
    public? final? data class Some : R|kotlin/Any| {
        public? [ContainingClassKey=Some] constructor([CorrespondingProperty=/Some.first] first: Int, [CorrespondingProperty=/Some.second] second: Double, [CorrespondingProperty=/Some.third] third: String): R|Some| {
            super<R|kotlin/Any|>()
        }

        public? final? [IsFromPrimaryConstructor=true] val first: Int = R|<local>/first|
            public? [ContainingClassKey=Some] get(): Int

        public? final? [IsFromPrimaryConstructor=true] val second: Double = R|<local>/second|
            public? [ContainingClassKey=Some] get(): Double

        public? final? [IsFromPrimaryConstructor=true] val third: String = R|<local>/third|
            public? [ContainingClassKey=Some] get(): String

        public final operator fun component1(): Int

        public final operator fun component2(): Double

        public final operator fun component3(): String

        public final fun copy(first: Int = this@R|/Some|.R|/Some.first|, second: Double = this@R|/Some|.R|/Some.second|, third: String = this@R|/Some|.R|/Some.third|): R|Some|

        public final operator fun equals(other: R|kotlin/Any?|): R|kotlin/Boolean|

        public final fun hashCode(): R|kotlin/Int|

        public final fun toString(): R|kotlin/String|

    }
    public? final? fun foo(some: Some): R|kotlin/Unit| {
        lval <destruct>: <implicit> = some#
        lvar x: <implicit> = R|<local>/<destruct>|.component1#()
        lvar y: <implicit> = R|<local>/<destruct>|.component2#()
        lvar z: String = R|<local>/<destruct>|.component3#()
        x#++
        *=(y#, Double(2.0))
        z# = String()
    }
    public? final? fun bar(some: Some): R|kotlin/Unit| {
        lval <destruct>: <implicit> = some#
        lval a: <implicit> = R|<local>/<destruct>|.component1#()
        lval _: <implicit> = R|<local>/<destruct>|.component3#()
    }
